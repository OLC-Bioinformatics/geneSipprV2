{
    "docs": [
        {
            "location": "/",
            "text": "sipprverse\n\n\nGitHub Repo\n\n\n\n\nThis pipeline is designed to automatically create and type FASTQ-formatted files during an active run of an \nIllumina MiSeq. Alternatively, it can perform typing given a folder containing FASTQ-formatted files.",
            "title": "Home"
        },
        {
            "location": "/#sipprverse",
            "text": "",
            "title": "sipprverse"
        },
        {
            "location": "/#github-repo",
            "text": "This pipeline is designed to automatically create and type FASTQ-formatted files during an active run of an \nIllumina MiSeq. Alternatively, it can perform typing given a folder containing FASTQ-formatted files.",
            "title": "GitHub Repo"
        },
        {
            "location": "/overview/",
            "text": "",
            "title": "Overview"
        },
        {
            "location": "/installation/",
            "text": "Dependencies\n\n\n\n\nLinux system\n\n\nConda\n and/or \nDocker\n\n\nTarget files\n\n\nMounted MiSeq (for method only)\n\n\n\n\nInstall targets\n\n\nwget -O targets.tar.gz https://ndownloader.figshare.com/files/11417183 && tar xf targets.tar.gz && rm targets.tar.gz\n\n\nInstall pipeline\n\n\nConda method\n\n\nThe way I install conda:\n\n\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nbash miniconda.sh -b -p $HOME/miniconda\nexport PATH=\"$HOME/miniconda/bin:$PATH\"\nconda config --set always_yes yes\nconda update -q conda\n\n\n\n\nThe easiest way to install sipprverse is to download the source code \nGitHub Link\n\n\ngit clone https://github.com/OLC-Bioinformatics/sipprverse.git\ncd sipprverse\nexport PATH=\"/path/to/repository/sipprverse:$PATH\"\nconda env create -f environment.yml\nsource activate genesippr\n\n\n\n\nDocker method\n\n\nDocker must already be installed\n\n\nThe docker image relies on conda to install all the dependencies, so the genesippr environment must be sourced within \nthe container prior to launch. The supplied command below launches container, immediately sources the environment, and runs the \npipeline, but it is also possible to run those commands separately from within the container. For additional details on the run\ncommand, please see \nthe tutorial\n.\n\n\ngit clone https://github.com/OLC-Bioinformatics/sipprverse.git\ncd sipprverse\ndocker build -t sipprverse:latest .\ndocker run -it --name sipprverse --rm sipprverse:latest /bin/bash -c \"source activate genesippr && sippr.py -s /path/to/sequences -r /path/to/database\"",
            "title": "Installation"
        },
        {
            "location": "/installation/#dependencies",
            "text": "Linux system  Conda  and/or  Docker  Target files  Mounted MiSeq (for method only)",
            "title": "Dependencies"
        },
        {
            "location": "/installation/#install-targets",
            "text": "wget -O targets.tar.gz https://ndownloader.figshare.com/files/11417183 && tar xf targets.tar.gz && rm targets.tar.gz",
            "title": "Install targets"
        },
        {
            "location": "/installation/#install-pipeline",
            "text": "",
            "title": "Install pipeline"
        },
        {
            "location": "/installation/#conda-method",
            "text": "The way I install conda:  wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nbash miniconda.sh -b -p $HOME/miniconda\nexport PATH=\"$HOME/miniconda/bin:$PATH\"\nconda config --set always_yes yes\nconda update -q conda  The easiest way to install sipprverse is to download the source code  GitHub Link  git clone https://github.com/OLC-Bioinformatics/sipprverse.git\ncd sipprverse\nexport PATH=\"/path/to/repository/sipprverse:$PATH\"\nconda env create -f environment.yml\nsource activate genesippr",
            "title": "Conda method"
        },
        {
            "location": "/installation/#docker-method",
            "text": "Docker must already be installed  The docker image relies on conda to install all the dependencies, so the genesippr environment must be sourced within \nthe container prior to launch. The supplied command below launches container, immediately sources the environment, and runs the \npipeline, but it is also possible to run those commands separately from within the container. For additional details on the run\ncommand, please see  the tutorial .  git clone https://github.com/OLC-Bioinformatics/sipprverse.git\ncd sipprverse\ndocker build -t sipprverse:latest .\ndocker run -it --name sipprverse --rm sipprverse:latest /bin/bash -c \"source activate genesippr && sippr.py -s /path/to/sequences -r /path/to/database\"",
            "title": "Docker method"
        },
        {
            "location": "/method/",
            "text": "The method pipeline is designed to run with a minimum of three supplied parameters:\n\n\n* path in which report folder is to be created (-o)\n* path to reference target database (-r)\n* path to mounted MiSeq folder (-m)\n* name of MiSeq run to process (-f)\n\n\n\nmethod.py -o /output/path -r /reference/target/path -m /path/to/miseq -f run name\n\n\nusage: method.py [-h] -o OUTPUTPATH -r REFERENCEFILEPATH -m MISEQPATH -f\n                 MISEQFOLDER [-n NUMTHREADS] [-d DESTINATIONFASTQ]\n                 [-r1 READLENGTHFORWARD] [-r2 READLENGTHREVERSE]\n                 [-c CUSTOMSAMPLESHEET] [-P PROJECTNAME] [-C]\n\nPerform FASTQ creation and typing\n\noptional arguments:\n  -h, --help            \n                        show this help message and exit\n  -o, --outputpath OUTPUTPATH\n                        Path to directory in which report folder is to be created\n  -r, --referencefilepath REFERENCEFILEPATH\n                        Provide the location of the folder containing the target files\n  -m, --miseqpath MISEQPATH\n                        Path of the folder containing MiSeq run data folder\n  -f, --miseqfolder MISEQFOLDER\n                        Name of the folder containing MiSeq run data\n  -n, --numthreads NUMTHREADS\n                        Number of threads. Default is the number of cores in the system\n  -d, --destinationfastq DESTINATIONFASTQ\n                        Optional folder path to store .fastq files created using the \n                        fastqCreation module. Defaults to outputpath/miseqfolder\n  -r1, --readlengthforward READLENGTHFORWARD\n                        Length of forward reads to use. Can specify \"full\" to\n                        take the full length of forward reads specified on the\n                        SampleSheet. Default value is \"full\"\n  -r2, --readlengthreverse READLENGTHREVERSE\n                        Length of reverse reads to use. Can specify \"full\" to\n                        take the full length of reverse reads specified on the\n                        SampleSheet. Default value is \"full\"\n  -c, --customsamplesheet CUSTOMSAMPLESHEET\n                        Path of folder containing a custom sample sheet (still\n                        must be named \"SampleSheet.csv\")\n  -P, --projectName PROJECTNAME\n                        A name for the analyses. If nothing is provided, then\n                        the \"Sample_Project\" field in the provided sample\n                        sheet will be used. Please note that bcl2fastq creates\n                        subfolders using the project name, so if multiple\n                        names are provided, the results will be split as into\n                        multiple projects\n  -C, --copy            \n                        Normally, the program will create symbolic links of\n                        the files into the sequence path, however, the are\n                        occasions when it is necessary to copy the files\n                        instead",
            "title": "Method Tutorial"
        },
        {
            "location": "/sippr/",
            "text": "The sippr pipeline is designed to run with a minimum of three supplied parameters:\n\n\n* path in which report folder is to be created (-o)\n* path to FASTQ sequence data (-s)\n* path to reference database (-r)\n\n\n\nsippr.py -o /output/path -s /sequence/path -r /reference/target/path\n\n\nusage: sippr.py [-h] -o OUTPUTPATH -s SEQUENCEPATH [-r REFERENCEFILEPATH]\n                [-n NUMTHREADS] [-u CUSTOMCUTOFFS] [-S]\n\nPerform modelling of parameters for GeneSipping\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o,  --outputpath OUTPUTPATH\n                        Path to directory in which report folder is to be\n                        created\n  -s, --sequencepath SEQUENCEPATH\n                        Path of .fastq(.gz) files to process.\n  -r, --referencefilepath REFERENCEFILEPATH\n                        Provide the location of the folder containing the\n                        pipeline accessory files (reference genomes, MLST\n                        data, etc.\n  -n, --numthreads NUMTHREADS\n                        Number of threads. Default is the number of cores in\n                        the system\n  -u, --customcutoffs CUSTOMCUTOFFS\n                        Custom cutoff values\n  -S, --serotype        Perform serotype analysis on samples determined to be\n                        Escherichia",
            "title": "Sippr Tutorial"
        },
        {
            "location": "/tests/",
            "text": "A test script and test datasets are included in the repository to ensure that installation of the script and dependencies \nwas successful. To run the unit tests (make sure that the genesippr conda environment is active):\n\n\ncd sipprverse\npytest\n\n\n\n\nIf any test fails, check the output to see where the issues occurred",
            "title": "Tests"
        },
        {
            "location": "/typing/",
            "text": "",
            "title": "Typing"
        }
    ]
}